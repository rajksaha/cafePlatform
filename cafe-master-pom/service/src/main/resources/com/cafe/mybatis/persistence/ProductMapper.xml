<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace= "com.cafe.mybatis.persistence.ProductMapper">
	
	<insert  id="create" parameterType="Product" useGeneratedKeys="true" keyProperty="productID" >
		INSERT INTO `product`
		(
			`restaurantID`, 
			`name`, 
			`price`, 
			`cost`
		)
		 VALUES 
		(
			#{restaurantID},
			#{name},
			#{price},
			#{cost}
		)
	</insert>
	
	<update id="update" parameterType="Product">
		UPDATE `product` SET 
		`restaurantID`= #{restaurantID},
		`name`= #{name},
		`price`= #{price},
		`cost`= #{cost}
		WHERE productID = #{productID}
	</update>
	
	<select id="getProductByID" parameterType="int" resultType="Product">
		SELECT p.`productID`, p.`restaurantID`, p.`name`, p.`price`, p.`cost`, r.restaurantName
		FROM `product` p
		JOIN restaurant r ON p.restaurantID = r.restaurantID
		WHERE p.productID = #{productID}
	</select>
	
	<select id="getProductByParam" parameterType="map" resultType="Product">
		SELECT p.`productID`, p.`restaurantID`, p.`name`, p.`price`, p.`cost`, r.restaurantName
		FROM `product` p
		JOIN restaurant r ON p.restaurantID = r.restaurantID
		WHERE 1 = 1
		<if test="productID != null">
			AND p.productID = #{productID}
		</if>
		<if test="name != null">
            AND LOWER(name) LIKE LOWER(CONCAT('%',#{name},'%'))
        </if>
        <if test="offset != null and limit != null and sortColumn != null and sortOrder != null">
            ORDER BY ${sortColumn} ${sortOrder}
            LIMIT #{limit} OFFSET #{offset}
        </if>
	</select>
	
	<select id="getProductCountByParam" parameterType="map" resultType="int">
		SELECT COUNT(productID)
        FROM product
        WHERE 1 = 1
        <if test="productID != null">
            AND productID = #{productID}
        </if>
        <if test="name != null">
            AND LOWER(name) LIKE LOWER(CONCAT('%',#{name},'%'))
        </if>
	</select>
	
	<select id="getDuplicateCount" parameterType="map" resultType="int">
		SELECT COUNT(productID)
		FROM product
		WHERE 1 = 1
		<if test="name != null">
			AND LOWER(name) = LOWER(#{name})
		</if>
		<if test="productID > 0">
			AND productID != #{productID}
		</if>
	</select>

	<delete id= "delete" parameterType="Product">
		DELETE FROM `product`
		WHERE productID = #{productID}		
	</delete>
		

</mapper>
